[{"/Users/Kahil/Desktop/codeProjects/full_stack_todos/client/src/reportWebVitals.js":"1","/Users/Kahil/Desktop/codeProjects/full_stack_todos/client/src/services/api.js":"2","/Users/Kahil/Desktop/codeProjects/full_stack_todos/client/src/actions/auth.js":"3","/Users/Kahil/Desktop/codeProjects/full_stack_todos/client/src/AuthForm.js":"4","/Users/Kahil/Desktop/codeProjects/full_stack_todos/client/src/actions/errors.js":"5","/Users/Kahil/Desktop/codeProjects/full_stack_todos/client/src/index.js":"6","/Users/Kahil/Desktop/codeProjects/full_stack_todos/client/src/actionCreators.js":"7","/Users/Kahil/Desktop/codeProjects/full_stack_todos/client/src/reducers/todos.js":"8","/Users/Kahil/Desktop/codeProjects/full_stack_todos/client/src/reducers/errors.js":"9","/Users/Kahil/Desktop/codeProjects/full_stack_todos/client/src/reducers/currentUser.js":"10","/Users/Kahil/Desktop/codeProjects/full_stack_todos/client/src/actions/todos.js":"11","/Users/Kahil/Desktop/codeProjects/full_stack_todos/client/src/containers/TodoForm.jsx":"12","/Users/Kahil/Desktop/codeProjects/full_stack_todos/client/src/components/TodoItem.jsx":"13","/Users/Kahil/Desktop/codeProjects/full_stack_todos/client/src/hocs/withAuth.js":"14","/Users/Kahil/Desktop/codeProjects/full_stack_todos/client/src/actionTypes.js":"15","/Users/Kahil/Desktop/codeProjects/full_stack_todos/client/src/components/Homepage.jsx":"16","/Users/Kahil/Desktop/codeProjects/full_stack_todos/client/src/containers/Navbar.jsx":"17","/Users/Kahil/Desktop/codeProjects/full_stack_todos/client/src/containers/App.jsx":"18","/Users/Kahil/Desktop/codeProjects/full_stack_todos/client/src/containers/TodoList.jsx":"19"},{"size":362,"mtime":1607525666555,"results":"20","hashOfConfig":"21"},{"size":882,"mtime":1607962885305,"results":"22","hashOfConfig":"21"},{"size":1161,"mtime":1607791981869,"results":"23","hashOfConfig":"21"},{"size":2938,"mtime":1607813409347,"results":"24","hashOfConfig":"21"},{"size":282,"mtime":1607782947031,"results":"25","hashOfConfig":"21"},{"size":1821,"mtime":1607816409300,"results":"26","hashOfConfig":"21"},{"size":1848,"mtime":1607811121959,"results":"27","hashOfConfig":"21"},{"size":554,"mtime":1607806290804,"results":"28","hashOfConfig":"21"},{"size":394,"mtime":1607794417515,"results":"29","hashOfConfig":"21"},{"size":446,"mtime":1607793191076,"results":"30","hashOfConfig":"21"},{"size":1030,"mtime":1607961474174,"results":"31","hashOfConfig":"21"},{"size":1111,"mtime":1607956884097,"results":"32","hashOfConfig":"21"},{"size":367,"mtime":1607807542764,"results":"33","hashOfConfig":"21"},{"size":699,"mtime":1607812050223,"results":"34","hashOfConfig":"21"},{"size":249,"mtime":1607812355363,"results":"35","hashOfConfig":"21"},{"size":1193,"mtime":1607956407148,"results":"36","hashOfConfig":"21"},{"size":964,"mtime":1607816600651,"results":"37","hashOfConfig":"21"},{"size":2977,"mtime":1607817387588,"results":"38","hashOfConfig":"21"},{"size":795,"mtime":1607956539188,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"1tdsw6c",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"47"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"57"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"47"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"47"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/Kahil/Desktop/codeProjects/full_stack_todos/client/src/reportWebVitals.js",[],["86","87"],"/Users/Kahil/Desktop/codeProjects/full_stack_todos/client/src/services/api.js",[],"/Users/Kahil/Desktop/codeProjects/full_stack_todos/client/src/actions/auth.js",[],["88","89"],"/Users/Kahil/Desktop/codeProjects/full_stack_todos/client/src/AuthForm.js",["90"],"import React, { Component } from \"react\";\n\nclass AuthForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: \"\",\n      username: \"\",\n      password: \"\",\n      profileImageUrl: \"\",\n    };\n  }\n\n  // Using es6 computed property name\n  handleChange = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  handleSubmit = (e) => {\n    // prevent the page from refreshing\n    e.preventDefault();\n    // This is useful to tell us the type of request we're going to make\n    const authType = this.props.signUp ? \"signup\" : \"signin\";\n    this.props.onAuth(authType, this.state).then(() => {\n      // using the router to redirect on success\n      this.props.history.push('/')\n    }).catch(() => {\n      return;\n    })\n  };\n\n  render() {\n    const { email, username, password, profileImageUrl } = this.state;\n    // history is coming from react router\n    const {\n      heading,\n      buttonText,\n      signUp,\n      errors,\n      history,\n      removeError,\n    } = this.props;\n\n    // Listens for any change in the route and then calls the remove error function\n    history.listen(() => {\n      removeError()\n    })\n\n    return (\n      <div className=\"auth-form\">\n        <h2 className=\"auth-form__heading\">{heading}</h2>\n        {errors.message && (\n          <div className=\"auth-form__error\">{errors.message}</div>\n        )}\n        <form action=\"\" onSubmit={this.handleSubmit}>\n          <label htmlFor=\"email\"></label>\n          <input\n            type=\"text\"\n            placeholder=\"EMAIL\"\n            id=\"email\"\n            name=\"email\"\n            onChange={this.handleChange}\n            value={email}\n            className=\"auth-form__control\"\n          />\n          <label htmlFor=\"password\"></label>\n          <input\n            id=\"password\"\n            name=\"password\"\n            placeholder=\"PASSWORD\"\n            type=\"password\"\n            onChange={this.handleChange}\n            className=\"auth-form__control\"\n          />\n          {signUp && (\n            <>\n              <label htmlFor=\"username\"></label>\n              <input\n                type=\"text\"\n                placeholder=\"USERNAME\"\n                id=\"username\"\n                name=\"username\"\n                onChange={this.handleChange}\n                value={username}\n                className=\"auth-form__control\"\n              />\n              <label htmlFor=\"image-url\"></label>\n              <input\n                className=\"auth-form__control\"\n                id=\"image-url\"\n                name=\"profileImageUrl\"\n                onChange={this.handleChange}\n                placeholder=\"IMAGE URL\"\n                type=\"test\"\n                value={profileImageUrl}\n              />\n            </>\n          )}\n          <button className=\"button\" type=\"submit\">\n            {buttonText}\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default AuthForm;\n","/Users/Kahil/Desktop/codeProjects/full_stack_todos/client/src/actions/errors.js",[],"/Users/Kahil/Desktop/codeProjects/full_stack_todos/client/src/index.js",[],"/Users/Kahil/Desktop/codeProjects/full_stack_todos/client/src/actionCreators.js",[],["91","92"],"/Users/Kahil/Desktop/codeProjects/full_stack_todos/client/src/reducers/todos.js",[],"/Users/Kahil/Desktop/codeProjects/full_stack_todos/client/src/reducers/errors.js",["93"],"import { ADD_ERROR, REMOVE_ERROR } from '../actionCreators'\n\n// Great way of having a generic error handler for all different types of errors\nexport default (state = { message: null }, action) => {\n  switch (action.type) {\n    case ADD_ERROR:\n      return { ...state, message: action.error }\n    case REMOVE_ERROR:\n      return { ...state, message: null }\n    default: \n      return state\n  }\n}","/Users/Kahil/Desktop/codeProjects/full_stack_todos/client/src/reducers/currentUser.js",["94"],"import { SET_CURRENT_USER } from '../actionCreators'\n\nconst initialState = {\n  isAuthenticated: false,\n  user: {}\n}\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case SET_CURRENT_USER:\n      return {\n        // Turn an empty object into false or if there are keys switch to true\n        isAuthenticated: !!Object.keys(action.user).length,\n        user: action.user\n      }\n    default:\n      return state;\n  }\n}","/Users/Kahil/Desktop/codeProjects/full_stack_todos/client/src/actions/todos.js",["95","96"],"import { apiCall } from '../services/api';\nimport { addError } from \"./errors\";\nimport { LOAD_TODOS, REMOVE_TODO, ADD_TODO } from \"../actionTypes\";\n\nexport const loadTodos = (todos) => ({\n  type: LOAD_TODOS,\n  todos,\n});\n\n// The functions that we're actually going to use will use redux thunk\n// Action creators usually return objects, but we're returning a function that returns an asynchronous action\nexport const fetchTodos = () => {\n  return (dispatch) => {\n    return apiCall(\"GET\", \"/api/todos\")\n      .then((res) => dispatch(loadTodos(res)))\n      .catch((err) => dispatch(addError(err.message)));\n  };\n};\n\n// Wait until our ajax call has finished then go to the reducer with the todo that our call got back from the server then map state to props\nexport const addTodo = (task) => (dispatch, getState) => {\n  // debugger;\n  let { currentUser } = getState();\n  const id = currentUser.user.id;\n  return apiCall(\"post\", `/api/users/${id}/todos`, { task })\n    .then((res) => {})\n    .catch((err) => addError(err.message));\n};\n","/Users/Kahil/Desktop/codeProjects/full_stack_todos/client/src/containers/TodoForm.jsx",[],"/Users/Kahil/Desktop/codeProjects/full_stack_todos/client/src/components/TodoItem.jsx",[],"/Users/Kahil/Desktop/codeProjects/full_stack_todos/client/src/hocs/withAuth.js",[],"/Users/Kahil/Desktop/codeProjects/full_stack_todos/client/src/actionTypes.js",[],"/Users/Kahil/Desktop/codeProjects/full_stack_todos/client/src/components/Homepage.jsx",["97"],"/Users/Kahil/Desktop/codeProjects/full_stack_todos/client/src/containers/Navbar.jsx",["98"],"import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { logout } from \"../actions/auth\";\n\nclass Navbar extends Component {\n  logout = e => {\n    e.preventDefault();\n    this.props.logout();\n  }\n\n  render() {\n    return (\n      <div className=\"app__nav\">\n        <Link to=\"/\">Home</Link>\n        {this.props.currentUser.isAuthenticated ? (\n          <>\n            <Link\n              to={`/users/${this.props.currentUser.user.id}/todos/new`}\n            >\n              Add a todo\n            </Link>\n            <a onClick={this.logout}>Logout</a>\n          </>\n        ) : (\n          <>\n            <Link to=\"/signup\">Sign Up</Link>\n            <Link to=\"/signin\">Log In</Link>\n          </>\n        )}\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(reduxState) {\n  return {\n    currentUser: reduxState.currentUser\n  }\n}\n\nexport default connect(mapStateToProps, {logout})(Navbar);\n","/Users/Kahil/Desktop/codeProjects/full_stack_todos/client/src/containers/App.jsx",["99","100","101","102"],"/Users/Kahil/Desktop/codeProjects/full_stack_todos/client/src/containers/TodoList.jsx",[],{"ruleId":"103","replacedBy":"104"},{"ruleId":"105","replacedBy":"106"},{"ruleId":"103","replacedBy":"107"},{"ruleId":"105","replacedBy":"108"},{"ruleId":"109","severity":1,"message":"110","line":35,"column":30,"nodeType":"111","messageId":"112","endLine":35,"endColumn":38},{"ruleId":"103","replacedBy":"113"},{"ruleId":"105","replacedBy":"114"},{"ruleId":"115","severity":1,"message":"116","line":4,"column":1,"nodeType":"117","endLine":13,"endColumn":2},{"ruleId":"115","severity":1,"message":"116","line":8,"column":1,"nodeType":"117","endLine":19,"endColumn":2},{"ruleId":"109","severity":1,"message":"118","line":3,"column":22,"nodeType":"111","messageId":"112","endLine":3,"endColumn":33},{"ruleId":"109","severity":1,"message":"119","line":3,"column":35,"nodeType":"111","messageId":"112","endLine":3,"endColumn":38},{"ruleId":"109","severity":1,"message":"120","line":1,"column":17,"nodeType":"111","messageId":"112","endLine":1,"endColumn":26},{"ruleId":"121","severity":1,"message":"122","line":23,"column":13,"nodeType":"123","endLine":23,"endColumn":38},{"ruleId":"109","severity":1,"message":"124","line":4,"column":18,"nodeType":"111","messageId":"112","endLine":4,"endColumn":22},{"ruleId":"109","severity":1,"message":"125","line":7,"column":8,"nodeType":"111","messageId":"112","endLine":7,"endColumn":16},{"ruleId":"126","severity":1,"message":"127","line":81,"column":13,"nodeType":"128","endLine":81,"endColumn":28},{"ruleId":"126","severity":1,"message":"127","line":86,"column":14,"nodeType":"128","endLine":86,"endColumn":29},"no-native-reassign",["129"],"no-negated-in-lhs",["130"],["129"],["130"],"no-unused-vars","'password' is assigned a value but never used.","Identifier","unusedVar",["129"],["130"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'REMOVE_TODO' is defined but never used.","'ADD' is defined but never used.","'Component' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Link' is defined but never used.","'TodoItem' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","no-global-assign","no-unsafe-negation"]